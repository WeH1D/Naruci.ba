// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NaruciBa.Database;

namespace NaruciBa.Migrations
{
    [DbContext(typeof(NaruciBaContext))]
    [Migration("20220821122054_DATA")]
    partial class DATA
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Latin1_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NaruciBa.Database.Dostavljac", b =>
                {
                    b.Property<int>("DostavljacID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumZaposlenja")
                        .HasColumnType("datetime");

                    b.Property<int?>("DostavljacStatus")
                        .HasColumnType("int");

                    b.Property<int?>("KorisnikID")
                        .HasColumnType("int");

                    b.HasKey("DostavljacID");

                    b.HasIndex("DostavljacStatus");

                    b.HasIndex("KorisnikID");

                    b.ToTable("Dostavljac");

                    b.HasData(
                        new
                        {
                            DostavljacID = 1,
                            DatumZaposlenja = new DateTime(2022, 8, 21, 14, 20, 53, 145, DateTimeKind.Local).AddTicks(1365),
                            DostavljacStatus = 1,
                            KorisnikID = 1013
                        },
                        new
                        {
                            DostavljacID = 2,
                            DatumZaposlenja = new DateTime(2022, 8, 21, 14, 20, 53, 145, DateTimeKind.Local).AddTicks(2238),
                            DostavljacStatus = 1,
                            KorisnikID = 1014
                        },
                        new
                        {
                            DostavljacID = 3,
                            DatumZaposlenja = new DateTime(2022, 8, 21, 14, 20, 53, 145, DateTimeKind.Local).AddTicks(2293),
                            DostavljacStatus = 2,
                            KorisnikID = 1015
                        },
                        new
                        {
                            DostavljacID = 4,
                            DatumZaposlenja = new DateTime(2022, 8, 21, 14, 20, 53, 145, DateTimeKind.Local).AddTicks(2317),
                            DostavljacStatus = 1,
                            KorisnikID = 2016
                        });
                });

            modelBuilder.Entity("NaruciBa.Database.DostavljacStatus", b =>
                {
                    b.Property<int>("DostavljacStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DostavljacStatusID");

                    b.ToTable("DostavljacStatus");

                    b.HasData(
                        new
                        {
                            DostavljacStatusID = 1,
                            Naziv = "slobodan"
                        },
                        new
                        {
                            DostavljacStatusID = 2,
                            Naziv = "u narudzbi"
                        },
                        new
                        {
                            DostavljacStatusID = 3,
                            Naziv = "neaktivan"
                        });
                });

            modelBuilder.Entity("NaruciBa.Database.DostavnaKvotum", b =>
                {
                    b.Property<int>("DostavnaKvotaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CijenaDostave")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("KlijentID")
                        .HasColumnType("int");

                    b.Property<int?>("PoslovnicaID")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("TrajanjeDostave")
                        .HasColumnType("int");

                    b.HasKey("DostavnaKvotaID")
                        .HasName("PK__Dostavna__D746976E58B9E5D3");

                    b.HasIndex("KlijentID");

                    b.HasIndex("PoslovnicaID");

                    b.ToTable("DostavnaKvota");
                });

            modelBuilder.Entity("NaruciBa.Database.Grad", b =>
                {
                    b.Property<int>("GradID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GradID");

                    b.ToTable("Grad");

                    b.HasData(
                        new
                        {
                            GradID = 1,
                            Naziv = "Tuzla"
                        },
                        new
                        {
                            GradID = 2,
                            Naziv = "Sarajevo"
                        },
                        new
                        {
                            GradID = 3,
                            Naziv = "Mostar"
                        },
                        new
                        {
                            GradID = 4,
                            Naziv = "Banja Luka"
                        },
                        new
                        {
                            GradID = 5,
                            Naziv = "Zenica"
                        },
                        new
                        {
                            GradID = 6,
                            Naziv = "Zavidovici"
                        });
                });

            modelBuilder.Entity("NaruciBa.Database.Kategorija", b =>
                {
                    b.Property<int>("KategorijaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("KategorijaID");

                    b.ToTable("Kategorija");

                    b.HasData(
                        new
                        {
                            KategorijaID = 15,
                            Naziv = "Hrana i Pice"
                        },
                        new
                        {
                            KategorijaID = 16,
                            Naziv = "Higijena"
                        },
                        new
                        {
                            KategorijaID = 17,
                            Naziv = "Elektronika"
                        },
                        new
                        {
                            KategorijaID = 18,
                            Naziv = "Kucni Ljubimci"
                        },
                        new
                        {
                            KategorijaID = 19,
                            Naziv = "Bebe"
                        },
                        new
                        {
                            KategorijaID = 20,
                            Naziv = "Skola"
                        },
                        new
                        {
                            KategorijaID = 21,
                            Naziv = "Vozila"
                        });
                });

            modelBuilder.Entity("NaruciBa.Database.Klijent", b =>
                {
                    b.Property<int>("KlijentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KorisnikID")
                        .HasColumnType("int");

                    b.HasKey("KlijentID");

                    b.HasIndex("KorisnikID");

                    b.ToTable("Klijent");

                    b.HasData(
                        new
                        {
                            KlijentID = 1,
                            KorisnikID = 2
                        },
                        new
                        {
                            KlijentID = 2,
                            KorisnikID = 1003
                        },
                        new
                        {
                            KlijentID = 6,
                            KorisnikID = 1007
                        },
                        new
                        {
                            KlijentID = 11,
                            KorisnikID = 1012
                        },
                        new
                        {
                            KlijentID = 12,
                            KorisnikID = 1016
                        });
                });

            modelBuilder.Entity("NaruciBa.Database.Koordinator", b =>
                {
                    b.Property<int>("KoordinatorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumZaposlenja")
                        .HasColumnType("datetime");

                    b.Property<int?>("KorisnikID")
                        .HasColumnType("int");

                    b.HasKey("KoordinatorID");

                    b.HasIndex("KorisnikID");

                    b.ToTable("Koordinator");

                    b.HasData(
                        new
                        {
                            KoordinatorID = 1,
                            DatumZaposlenja = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(4372),
                            KorisnikID = 2
                        });
                });

            modelBuilder.Entity("NaruciBa.Database.Korisnik", b =>
                {
                    b.Property<int>("KorisnikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DatumIzmjene")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DatumKreiranja")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DatumRodenja")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("GradID")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordSalt")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prezime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SlikaPutanja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("KorisnikID");

                    b.HasIndex("GradID");

                    b.ToTable("Korisnik");

                    b.HasData(
                        new
                        {
                            KorisnikID = 2,
                            Adresa = "Adresa admina 24",
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 142, DateTimeKind.Local).AddTicks(9309),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 142, DateTimeKind.Local).AddTicks(8901),
                            DatumRodenja = new DateTime(2022, 8, 21, 14, 20, 53, 139, DateTimeKind.Local).AddTicks(4052),
                            Email = "desktop@gmail.com",
                            GradID = 1,
                            Ime = "desktop",
                            PasswordHash = "Sd+f8RaMfx6JgSeSCurQ7c4m1HQ=",
                            PasswordSalt = "p9av83cBc37tVxOqcJlaPA==",
                            Prezime = "admin",
                            Telefon = "06411123233"
                        },
                        new
                        {
                            KorisnikID = 1003,
                            Adresa = "Adresa mobile 23 L",
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(1917),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(1901),
                            DatumRodenja = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(1876),
                            Email = "mobile@gmail.com",
                            GradID = 1,
                            Ime = "mobile",
                            PasswordHash = "Sd+f8RaMfx6JgSeSCurQ7c4m1HQ=",
                            PasswordSalt = "p9av83cBc37tVxOqcJlaPA==",
                            Prezime = "test",
                            Telefon = "064166323233"
                        },
                        new
                        {
                            KorisnikID = 1007,
                            Adresa = "Neka Adresa",
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(2111),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(2107),
                            DatumRodenja = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(2101),
                            Email = "velid@gmail.com",
                            GradID = 1,
                            Ime = "Velid",
                            PasswordHash = "dX4PhU98Jw/EfxV3XgaPJq0paX8=",
                            PasswordSalt = "BehlC7xXAX9C1z5zPdFzGg==",
                            Prezime = "Hatic",
                            Telefon = "06234344455"
                        },
                        new
                        {
                            KorisnikID = 1012,
                            Adresa = "Prva ulica 42",
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(2146),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(2143),
                            DatumRodenja = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(2139),
                            Email = "emir@gmail.com",
                            GradID = 1,
                            Ime = "Emir",
                            PasswordHash = "+9yvonO1LEAd2j5PcQ4rlx04EKA=",
                            PasswordSalt = "nq+mmwzWQEmtnVQLQwFwIQ==",
                            Prezime = "Hodzic",
                            Telefon = "06234344455"
                        },
                        new
                        {
                            KorisnikID = 1013,
                            Adresa = "Druga ulica 12",
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(2174),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(2171),
                            DatumRodenja = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(2168),
                            Email = "ahmo@gmail.com",
                            GradID = 1,
                            Ime = "Ahmo",
                            PasswordHash = "Sd+f8RaMfx6JgSeSCurQ7c4m1HQ=",
                            PasswordSalt = "p9av83cBc37tVxOqcJlaPA==",
                            Prezime = "Ahmic",
                            Telefon = "0623554555"
                        },
                        new
                        {
                            KorisnikID = 1014,
                            Adresa = "Treca ulica 2",
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(2206),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(2204),
                            DatumRodenja = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(2200),
                            Email = "haso@gmail.com",
                            GradID = 1,
                            Ime = "Haso",
                            PasswordHash = "IJJHgLDhwaX399tMxsqh/bQ7SjM=",
                            PasswordSalt = "caGo+QqT++vaqQFQrhE2eA==",
                            Prezime = "Hasanovic",
                            Telefon = "0623554555"
                        },
                        new
                        {
                            KorisnikID = 1015,
                            Adresa = "Cetvrta ulica 23",
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(2234),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(2232),
                            DatumRodenja = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(2228),
                            Email = "dostavljac@gmail.com",
                            GradID = 1,
                            Ime = "Dostavljac",
                            PasswordHash = "Sd+f8RaMfx6JgSeSCurQ7c4m1HQ=",
                            PasswordSalt = "p9av83cBc37tVxOqcJlaPA==",
                            Prezime = "Test",
                            Telefon = "0623554555"
                        },
                        new
                        {
                            KorisnikID = 1016,
                            Adresa = "Peta ulica 23",
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(2261),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(2258),
                            DatumRodenja = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(2254),
                            Email = "ajdin@gmail.com",
                            GradID = 1,
                            Ime = "Ajdin",
                            PasswordHash = "KollFEuC5A6+fRdbD7iF4UeSNBM=",
                            PasswordSalt = "JQS8wY5Hq1Jf7IFACDkYmQ==",
                            Prezime = "Ajdinovic",
                            Telefon = "0623554555"
                        },
                        new
                        {
                            KorisnikID = 2016,
                            Adresa = "Sesta ulica 35",
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(2288),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(2286),
                            DatumRodenja = new DateTime(2022, 8, 21, 14, 20, 53, 144, DateTimeKind.Local).AddTicks(2282),
                            Email = "bekir@gmail.com",
                            GradID = 3,
                            Ime = "Bekir",
                            PasswordHash = "m4SNoQUsSWimY2iEcmlcH4JX3nw=",
                            PasswordSalt = "sad/ufjxSKTwXWAq1kUISw==",
                            Prezime = "Becirovic",
                            Telefon = "0623554555"
                        });
                });

            modelBuilder.Entity("NaruciBa.Database.Kupon", b =>
                {
                    b.Property<int>("KuponID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Aktivan")
                        .HasColumnType("bit");

                    b.Property<int?>("BrojKupovina")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DatumKreiranja")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Popust")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("Postotak")
                        .HasColumnType("bit");

                    b.HasKey("KuponID");

                    b.ToTable("Kupon");
                });

            modelBuilder.Entity("NaruciBa.Database.KuponPoslovnica", b =>
                {
                    b.Property<int>("KuponPoslovnicaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KuponID")
                        .HasColumnType("int");

                    b.Property<int?>("PoslovnicaID")
                        .HasColumnType("int");

                    b.HasKey("KuponPoslovnicaID");

                    b.HasIndex("KuponID");

                    b.HasIndex("PoslovnicaID");

                    b.ToTable("KuponPoslovnica");
                });

            modelBuilder.Entity("NaruciBa.Database.NaruceniProizvod", b =>
                {
                    b.Property<int>("NaruceniProizvodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Kolicina")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("NarudzbaID")
                        .HasColumnType("int");

                    b.Property<int?>("ProizvodID")
                        .HasColumnType("int");

                    b.Property<decimal?>("UkupnaCijena")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("NaruceniProizvodID");

                    b.HasIndex("NarudzbaID");

                    b.HasIndex("ProizvodID");

                    b.ToTable("NaruceniProizvod");

                    b.HasData(
                        new
                        {
                            NaruceniProizvodID = 1029,
                            Kolicina = 3m,
                            NarudzbaID = 14,
                            ProizvodID = 12,
                            UkupnaCijena = 6m
                        },
                        new
                        {
                            NaruceniProizvodID = 1030,
                            Kolicina = 1m,
                            NarudzbaID = 15,
                            ProizvodID = 13,
                            UkupnaCijena = 3m
                        },
                        new
                        {
                            NaruceniProizvodID = 1031,
                            Kolicina = 3m,
                            NarudzbaID = 16,
                            ProizvodID = 11,
                            UkupnaCijena = 6.9m
                        },
                        new
                        {
                            NaruceniProizvodID = 1032,
                            Kolicina = 3m,
                            NarudzbaID = 17,
                            ProizvodID = 13,
                            UkupnaCijena = 9m
                        },
                        new
                        {
                            NaruceniProizvodID = 1033,
                            Kolicina = 1m,
                            NarudzbaID = 19,
                            ProizvodID = 11,
                            UkupnaCijena = 2.3m
                        },
                        new
                        {
                            NaruceniProizvodID = 1035,
                            Kolicina = 4m,
                            NarudzbaID = 19,
                            ProizvodID = 1011,
                            UkupnaCijena = 14m
                        },
                        new
                        {
                            NaruceniProizvodID = 1036,
                            Kolicina = 2m,
                            NarudzbaID = 20,
                            ProizvodID = 13,
                            UkupnaCijena = 6m
                        },
                        new
                        {
                            NaruceniProizvodID = 1037,
                            Kolicina = 4m,
                            NarudzbaID = 21,
                            ProizvodID = 13,
                            UkupnaCijena = 12m
                        },
                        new
                        {
                            NaruceniProizvodID = 2033,
                            Kolicina = 3m,
                            NarudzbaID = 1019,
                            ProizvodID = 11,
                            UkupnaCijena = 6.9m
                        },
                        new
                        {
                            NaruceniProizvodID = 2034,
                            Kolicina = 2m,
                            NarudzbaID = 1019,
                            ProizvodID = 12,
                            UkupnaCijena = 4m
                        },
                        new
                        {
                            NaruceniProizvodID = 2035,
                            Kolicina = 5m,
                            NarudzbaID = 1021,
                            ProizvodID = 11,
                            UkupnaCijena = 11.5m
                        },
                        new
                        {
                            NaruceniProizvodID = 3033,
                            Kolicina = 2m,
                            NarudzbaID = 2020,
                            ProizvodID = 11,
                            UkupnaCijena = 4.6m
                        },
                        new
                        {
                            NaruceniProizvodID = 3034,
                            Kolicina = 3m,
                            NarudzbaID = 2021,
                            ProizvodID = 12,
                            UkupnaCijena = 6m
                        },
                        new
                        {
                            NaruceniProizvodID = 3035,
                            Kolicina = 2m,
                            NarudzbaID = 2022,
                            ProizvodID = 12,
                            UkupnaCijena = 4m
                        },
                        new
                        {
                            NaruceniProizvodID = 4033,
                            Kolicina = 4m,
                            NarudzbaID = 3020,
                            ProizvodID = 11,
                            UkupnaCijena = 9.2m
                        },
                        new
                        {
                            NaruceniProizvodID = 4034,
                            Kolicina = 2m,
                            NarudzbaID = 3021,
                            ProizvodID = 13,
                            UkupnaCijena = 6m
                        },
                        new
                        {
                            NaruceniProizvodID = 4035,
                            Kolicina = 3m,
                            NarudzbaID = 3022,
                            ProizvodID = 11,
                            UkupnaCijena = 6.9m
                        },
                        new
                        {
                            NaruceniProizvodID = 4036,
                            Kolicina = 5m,
                            NarudzbaID = 3023,
                            ProizvodID = 12,
                            UkupnaCijena = 10m
                        },
                        new
                        {
                            NaruceniProizvodID = 4037,
                            Kolicina = 2m,
                            NarudzbaID = 3023,
                            ProizvodID = 11,
                            UkupnaCijena = 4.6m
                        });
                });

            modelBuilder.Entity("NaruciBa.Database.Narudzba", b =>
                {
                    b.Property<int>("NarudzbaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BonusZaDostavljaca")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int?>("DostavljacID")
                        .HasColumnType("int");

                    b.Property<int?>("KlijentID")
                        .HasColumnType("int");

                    b.Property<int?>("KoordinatorID")
                        .HasColumnType("int");

                    b.Property<int?>("KuponID")
                        .HasColumnType("int");

                    b.Property<int?>("NarudzbaStatusID")
                        .HasColumnType("int");

                    b.Property<int?>("PoslovnicaID")
                        .HasColumnType("int");

                    b.Property<string>("SlikaRacunaPutanja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("UkupanIznos")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("NarudzbaID");

                    b.HasIndex("DostavljacID");

                    b.HasIndex("KlijentID");

                    b.HasIndex("KoordinatorID");

                    b.HasIndex("KuponID");

                    b.HasIndex("NarudzbaStatusID");

                    b.HasIndex("PoslovnicaID");

                    b.ToTable("Narudzba");

                    b.HasData(
                        new
                        {
                            NarudzbaID = 1,
                            Datum = new DateTime(2022, 8, 21, 14, 20, 53, 146, DateTimeKind.Local).AddTicks(5343),
                            DostavljacID = 2,
                            KlijentID = 2,
                            NarudzbaStatusID = 7,
                            PoslovnicaID = 1,
                            UkupanIznos = 16.6m
                        },
                        new
                        {
                            NarudzbaID = 6,
                            Datum = new DateTime(2022, 8, 21, 14, 20, 53, 146, DateTimeKind.Local).AddTicks(6355),
                            DostavljacID = 1,
                            KlijentID = 11,
                            NarudzbaStatusID = 6,
                            PoslovnicaID = 1,
                            UkupanIznos = 12.05m
                        },
                        new
                        {
                            NarudzbaID = 9,
                            Datum = new DateTime(2022, 8, 21, 14, 20, 53, 146, DateTimeKind.Local).AddTicks(6416),
                            KlijentID = 2,
                            NarudzbaStatusID = 6,
                            PoslovnicaID = 1,
                            UkupanIznos = 9.75m
                        },
                        new
                        {
                            NarudzbaID = 8,
                            Datum = new DateTime(2022, 8, 21, 14, 20, 53, 146, DateTimeKind.Local).AddTicks(6442),
                            DostavljacID = 3,
                            KlijentID = 2,
                            NarudzbaStatusID = 7,
                            PoslovnicaID = 1,
                            UkupanIznos = 16.6m
                        },
                        new
                        {
                            NarudzbaID = 10,
                            Datum = new DateTime(2022, 8, 21, 14, 20, 53, 146, DateTimeKind.Local).AddTicks(6465),
                            DostavljacID = 1,
                            KlijentID = 2,
                            NarudzbaStatusID = 6,
                            PoslovnicaID = 1,
                            UkupanIznos = 4.6m
                        },
                        new
                        {
                            NarudzbaID = 11,
                            Datum = new DateTime(2022, 8, 21, 14, 20, 53, 146, DateTimeKind.Local).AddTicks(6490),
                            DostavljacID = 1,
                            KlijentID = 2,
                            NarudzbaStatusID = 6,
                            PoslovnicaID = 1,
                            UkupanIznos = 2.3m
                        },
                        new
                        {
                            NarudzbaID = 12,
                            Datum = new DateTime(2022, 8, 21, 14, 20, 53, 146, DateTimeKind.Local).AddTicks(6513),
                            DostavljacID = 1,
                            KlijentID = 2,
                            NarudzbaStatusID = 6,
                            PoslovnicaID = 1,
                            SlikaRacunaPutanja = "narudzba_12.jpg",
                            UkupanIznos = 18.32m
                        },
                        new
                        {
                            NarudzbaID = 13,
                            Datum = new DateTime(2022, 8, 21, 14, 20, 53, 146, DateTimeKind.Local).AddTicks(6832),
                            DostavljacID = 2,
                            KlijentID = 2,
                            NarudzbaStatusID = 6,
                            PoslovnicaID = 1,
                            SlikaRacunaPutanja = "narudzba_13.jpg",
                            UkupanIznos = 11.25m
                        },
                        new
                        {
                            NarudzbaID = 14,
                            Datum = new DateTime(2022, 8, 21, 14, 20, 53, 146, DateTimeKind.Local).AddTicks(6879),
                            DostavljacID = 4,
                            KlijentID = 2,
                            NarudzbaStatusID = 6,
                            PoslovnicaID = 1,
                            UkupanIznos = 6m
                        },
                        new
                        {
                            NarudzbaID = 15,
                            Datum = new DateTime(2022, 8, 21, 14, 20, 53, 146, DateTimeKind.Local).AddTicks(6906),
                            DostavljacID = 3,
                            KlijentID = 2,
                            NarudzbaStatusID = 6,
                            PoslovnicaID = 2,
                            UkupanIznos = 3m
                        },
                        new
                        {
                            NarudzbaID = 16,
                            Datum = new DateTime(2022, 8, 21, 14, 20, 53, 146, DateTimeKind.Local).AddTicks(6928),
                            DostavljacID = 3,
                            KlijentID = 2,
                            NarudzbaStatusID = 6,
                            PoslovnicaID = 1,
                            UkupanIznos = 6.9m
                        },
                        new
                        {
                            NarudzbaID = 17,
                            Datum = new DateTime(2022, 8, 21, 14, 20, 53, 146, DateTimeKind.Local).AddTicks(6950),
                            DostavljacID = 3,
                            KlijentID = 2,
                            NarudzbaStatusID = 6,
                            PoslovnicaID = 2,
                            UkupanIznos = 9m
                        },
                        new
                        {
                            NarudzbaID = 19,
                            Datum = new DateTime(2022, 8, 21, 14, 20, 53, 146, DateTimeKind.Local).AddTicks(7038),
                            DostavljacID = 1,
                            KlijentID = 12,
                            NarudzbaStatusID = 6,
                            PoslovnicaID = 1,
                            UkupanIznos = 16.3m
                        },
                        new
                        {
                            NarudzbaID = 20,
                            Datum = new DateTime(2022, 8, 21, 14, 20, 53, 146, DateTimeKind.Local).AddTicks(7062),
                            DostavljacID = 1,
                            KlijentID = 12,
                            NarudzbaStatusID = 6,
                            PoslovnicaID = 2,
                            UkupanIznos = 6m
                        },
                        new
                        {
                            NarudzbaID = 21,
                            Datum = new DateTime(2022, 8, 21, 14, 20, 53, 146, DateTimeKind.Local).AddTicks(7085),
                            DostavljacID = 1,
                            KlijentID = 12,
                            NarudzbaStatusID = 6,
                            PoslovnicaID = 2,
                            UkupanIznos = 12m
                        },
                        new
                        {
                            NarudzbaID = 1019,
                            Datum = new DateTime(2022, 8, 21, 14, 20, 53, 146, DateTimeKind.Local).AddTicks(7108),
                            DostavljacID = 4,
                            KlijentID = 12,
                            NarudzbaStatusID = 6,
                            PoslovnicaID = 1,
                            UkupanIznos = 10.9m
                        },
                        new
                        {
                            NarudzbaID = 1021,
                            Datum = new DateTime(2022, 8, 21, 14, 20, 53, 146, DateTimeKind.Local).AddTicks(7131),
                            DostavljacID = 3,
                            KlijentID = 12,
                            NarudzbaStatusID = 3,
                            PoslovnicaID = 1,
                            SlikaRacunaPutanja = "narudzba_1021.jpg",
                            UkupanIznos = 11.5m
                        },
                        new
                        {
                            NarudzbaID = 2020,
                            Datum = new DateTime(2022, 8, 21, 14, 20, 53, 146, DateTimeKind.Local).AddTicks(7154),
                            KlijentID = 12,
                            NarudzbaStatusID = 2,
                            PoslovnicaID = 1,
                            UkupanIznos = 4.6m
                        },
                        new
                        {
                            NarudzbaID = 2021,
                            Datum = new DateTime(2022, 8, 21, 14, 20, 53, 146, DateTimeKind.Local).AddTicks(7177),
                            KlijentID = 12,
                            NarudzbaStatusID = 2,
                            PoslovnicaID = 1,
                            UkupanIznos = 6m
                        },
                        new
                        {
                            NarudzbaID = 2022,
                            Datum = new DateTime(2022, 8, 21, 14, 20, 53, 146, DateTimeKind.Local).AddTicks(7198),
                            KlijentID = 12,
                            NarudzbaStatusID = 2,
                            PoslovnicaID = 1,
                            UkupanIznos = 4m
                        },
                        new
                        {
                            NarudzbaID = 3020,
                            Datum = new DateTime(2022, 8, 21, 14, 20, 53, 146, DateTimeKind.Local).AddTicks(7221),
                            KlijentID = 12,
                            NarudzbaStatusID = 2,
                            PoslovnicaID = 1,
                            UkupanIznos = 9.2m
                        },
                        new
                        {
                            NarudzbaID = 3021,
                            Datum = new DateTime(2022, 8, 21, 14, 20, 53, 146, DateTimeKind.Local).AddTicks(7243),
                            KlijentID = 12,
                            NarudzbaStatusID = 2,
                            PoslovnicaID = 2,
                            UkupanIznos = 6m
                        },
                        new
                        {
                            NarudzbaID = 3022,
                            Datum = new DateTime(2022, 8, 21, 14, 20, 53, 146, DateTimeKind.Local).AddTicks(7264),
                            KlijentID = 12,
                            NarudzbaStatusID = 2,
                            PoslovnicaID = 1,
                            UkupanIznos = 6.9m
                        },
                        new
                        {
                            NarudzbaID = 3023,
                            Datum = new DateTime(2022, 8, 21, 14, 20, 53, 146, DateTimeKind.Local).AddTicks(7285),
                            KlijentID = 2,
                            NarudzbaStatusID = 1,
                            PoslovnicaID = 1,
                            UkupanIznos = 14.6m
                        });
                });

            modelBuilder.Entity("NaruciBa.Database.NarudzbaStatus", b =>
                {
                    b.Property<int>("NarudzbaStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("NarudzbaStatusID");

                    b.ToTable("NarudzbaStatus");

                    b.HasData(
                        new
                        {
                            NarudzbaStatusID = 1,
                            Naziv = "Zapoceta"
                        },
                        new
                        {
                            NarudzbaStatusID = 2,
                            Naziv = "Aktivna"
                        },
                        new
                        {
                            NarudzbaStatusID = 3,
                            Naziv = "Zaprimljena"
                        },
                        new
                        {
                            NarudzbaStatusID = 4,
                            Naziv = "U kupovini"
                        },
                        new
                        {
                            NarudzbaStatusID = 5,
                            Naziv = "Dostava"
                        },
                        new
                        {
                            NarudzbaStatusID = 6,
                            Naziv = "Zavrsena"
                        },
                        new
                        {
                            NarudzbaStatusID = 7,
                            Naziv = "Otkazana"
                        });
                });

            modelBuilder.Entity("NaruciBa.Database.Podkategorija", b =>
                {
                    b.Property<int>("PodkategorijaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KategorijaID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PodkategorijaID");

                    b.HasIndex("KategorijaID");

                    b.ToTable("Podkategorija");

                    b.HasData(
                        new
                        {
                            PodkategorijaID = 38,
                            KategorijaID = 15,
                            Naziv = "Voce"
                        },
                        new
                        {
                            PodkategorijaID = 39,
                            KategorijaID = 15,
                            Naziv = "Povrce"
                        },
                        new
                        {
                            PodkategorijaID = 40,
                            KategorijaID = 15,
                            Naziv = "Mesni Proizvodi"
                        },
                        new
                        {
                            PodkategorijaID = 41,
                            KategorijaID = 15,
                            Naziv = "Mlijecni Proizvodi"
                        },
                        new
                        {
                            PodkategorijaID = 42,
                            KategorijaID = 15,
                            Naziv = "Zacini"
                        },
                        new
                        {
                            PodkategorijaID = 43,
                            KategorijaID = 16,
                            Naziv = "Samponi/sapuni"
                        },
                        new
                        {
                            PodkategorijaID = 44,
                            KategorijaID = 16,
                            Naziv = "Zubi"
                        },
                        new
                        {
                            PodkategorijaID = 50,
                            KategorijaID = 20,
                            Naziv = "Ruksaci/torbe"
                        },
                        new
                        {
                            PodkategorijaID = 52,
                            KategorijaID = 20,
                            Naziv = "Pribor"
                        },
                        new
                        {
                            PodkategorijaID = 53,
                            KategorijaID = 20,
                            Naziv = "Knjige"
                        },
                        new
                        {
                            PodkategorijaID = 54,
                            KategorijaID = 20,
                            Naziv = "Pokloni"
                        },
                        new
                        {
                            PodkategorijaID = 55,
                            KategorijaID = 18,
                            Naziv = "Hrana za ljubimce"
                        },
                        new
                        {
                            PodkategorijaID = 56,
                            KategorijaID = 18,
                            Naziv = "Igracke za ljubimce"
                        },
                        new
                        {
                            PodkategorijaID = 57,
                            KategorijaID = 18,
                            Naziv = "Higijena ljubimaca"
                        },
                        new
                        {
                            PodkategorijaID = 58,
                            KategorijaID = 18,
                            Naziv = "Ljubimci ostalo"
                        },
                        new
                        {
                            PodkategorijaID = 59,
                            KategorijaID = 19,
                            Naziv = "Igracke za bebe"
                        },
                        new
                        {
                            PodkategorijaID = 60,
                            KategorijaID = 19,
                            Naziv = "Hrana za bebe"
                        },
                        new
                        {
                            PodkategorijaID = 61,
                            KategorijaID = 19,
                            Naziv = "Higijena za bebe"
                        },
                        new
                        {
                            PodkategorijaID = 62,
                            KategorijaID = 17,
                            Naziv = "Pohrana podataka"
                        },
                        new
                        {
                            PodkategorijaID = 63,
                            KategorijaID = 17,
                            Naziv = "Kompjuterska oprema"
                        },
                        new
                        {
                            PodkategorijaID = 64,
                            KategorijaID = 17,
                            Naziv = "Laptopi"
                        },
                        new
                        {
                            PodkategorijaID = 65,
                            KategorijaID = 17,
                            Naziv = "Mobiteli"
                        },
                        new
                        {
                            PodkategorijaID = 66,
                            KategorijaID = 16,
                            Naziv = "Mirisi"
                        });
                });

            modelBuilder.Entity("NaruciBa.Database.Poslovnica", b =>
                {
                    b.Property<int>("PoslovnicaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DatumIzmjene")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DatumKreiranja")
                        .HasColumnType("datetime");

                    b.Property<int?>("GradID")
                        .HasColumnType("int");

                    b.Property<string>("KontaktEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("KontaktTel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("TrgovackiLanacID")
                        .HasColumnType("int");

                    b.HasKey("PoslovnicaID");

                    b.HasIndex("GradID");

                    b.HasIndex("TrgovackiLanacID");

                    b.ToTable("Poslovnica");

                    b.HasData(
                        new
                        {
                            PoslovnicaID = 1,
                            Adresa = "Mitra Trifunovica",
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 147, DateTimeKind.Local).AddTicks(6730),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 147, DateTimeKind.Local).AddTicks(6423),
                            GradID = 1,
                            KontaktEmail = "managmentbcctuzla@confluence.ba",
                            KontaktTel = "035288699",
                            Status = true,
                            TrgovackiLanacID = 1
                        },
                        new
                        {
                            PoslovnicaID = 2,
                            Adresa = "Ismeta Mujezinovica D9",
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 147, DateTimeKind.Local).AddTicks(7310),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 147, DateTimeKind.Local).AddTicks(7289),
                            GradID = 1,
                            KontaktEmail = "bingoSjenjak@gmail.com",
                            KontaktTel = "035365580",
                            Status = true,
                            TrgovackiLanacID = 1
                        },
                        new
                        {
                            PoslovnicaID = 3,
                            Adresa = "Bulevar 2. Armije BiH 1",
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 147, DateTimeKind.Local).AddTicks(7558),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 147, DateTimeKind.Local).AddTicks(7553),
                            GradID = 1,
                            KontaktEmail = "konzum@gmail.com",
                            KontaktTel = "00023233344",
                            Status = true,
                            TrgovackiLanacID = 2
                        },
                        new
                        {
                            PoslovnicaID = 4,
                            Adresa = "Stupine B-14",
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 147, DateTimeKind.Local).AddTicks(7592),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 147, DateTimeKind.Local).AddTicks(7588),
                            GradID = 1,
                            KontaktEmail = "genelecTuzla@gmail.com",
                            KontaktTel = "0643536266",
                            Status = true,
                            TrgovackiLanacID = 3
                        });
                });

            modelBuilder.Entity("NaruciBa.Database.PoslovnicaFavorit", b =>
                {
                    b.Property<int>("PoslovnicaFavoritID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KlijentID")
                        .HasColumnType("int");

                    b.Property<int?>("PoslovnicaID")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("PoslovnicaFavoritID");

                    b.HasIndex("KlijentID");

                    b.HasIndex("PoslovnicaID");

                    b.ToTable("PoslovnicaFavorit");
                });

            modelBuilder.Entity("NaruciBa.Database.PoslovnicaKategorija", b =>
                {
                    b.Property<int>("PoslovnicaKategorijaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KategorijaID")
                        .HasColumnType("int");

                    b.Property<int?>("PoslovnicaID")
                        .HasColumnType("int");

                    b.HasKey("PoslovnicaKategorijaID");

                    b.HasIndex("KategorijaID");

                    b.HasIndex("PoslovnicaID");

                    b.ToTable("PoslovnicaKategorija");

                    b.HasData(
                        new
                        {
                            PoslovnicaKategorijaID = 6,
                            KategorijaID = 15,
                            PoslovnicaID = 1
                        },
                        new
                        {
                            PoslovnicaKategorijaID = 7,
                            KategorijaID = 16,
                            PoslovnicaID = 2
                        },
                        new
                        {
                            PoslovnicaKategorijaID = 1006,
                            KategorijaID = 16,
                            PoslovnicaID = 1
                        },
                        new
                        {
                            PoslovnicaKategorijaID = 1007,
                            KategorijaID = 15,
                            PoslovnicaID = 3
                        },
                        new
                        {
                            PoslovnicaKategorijaID = 1008,
                            KategorijaID = 16,
                            PoslovnicaID = 3
                        },
                        new
                        {
                            PoslovnicaKategorijaID = 1009,
                            KategorijaID = 19,
                            PoslovnicaID = 3
                        },
                        new
                        {
                            PoslovnicaKategorijaID = 1010,
                            KategorijaID = 15,
                            PoslovnicaID = 2
                        },
                        new
                        {
                            PoslovnicaKategorijaID = 1011,
                            KategorijaID = 18,
                            PoslovnicaID = 2
                        },
                        new
                        {
                            PoslovnicaKategorijaID = 1012,
                            KategorijaID = 17,
                            PoslovnicaID = 4
                        });
                });

            modelBuilder.Entity("NaruciBa.Database.Proizvod", b =>
                {
                    b.Property<int>("ProizvodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cijena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DatumIzmjene")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DatumKreiranja")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Kg")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Opis")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("PodkategorijaID")
                        .HasColumnType("int");

                    b.Property<int?>("PoslovnicaID")
                        .HasColumnType("int");

                    b.Property<string>("Sifra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlikaPutanja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("ProizvodID");

                    b.HasIndex("PodkategorijaID");

                    b.HasIndex("PoslovnicaID");

                    b.ToTable("Proizvod");

                    b.HasData(
                        new
                        {
                            ProizvodID = 11,
                            Cijena = 2.3m,
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(7253),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(7855),
                            Kg = true,
                            Naziv = "Jabuka",
                            Opis = "Svjeza jabuka",
                            PodkategorijaID = 38,
                            PoslovnicaID = 1,
                            Sifra = "0000",
                            SlikaPutanja = "proizvod_11.jpg",
                            Status = true
                        },
                        new
                        {
                            ProizvodID = 12,
                            Cijena = 2m,
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(8691),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(8715),
                            Kg = true,
                            Naziv = "Banana",
                            Opis = "Svjeza banana",
                            PodkategorijaID = 38,
                            PoslovnicaID = 1,
                            Sifra = "0001",
                            SlikaPutanja = "proizvod_12.jpg",
                            Status = true
                        },
                        new
                        {
                            ProizvodID = 13,
                            Cijena = 3m,
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(8768),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(8773),
                            Kg = false,
                            Naziv = "Head & Shoulders",
                            Opis = "sampon protiv peruti",
                            PodkategorijaID = 43,
                            PoslovnicaID = 2,
                            Sifra = "0023",
                            SlikaPutanja = "proizvod_13.jpg",
                            Status = true
                        },
                        new
                        {
                            ProizvodID = 1011,
                            Cijena = 3.5m,
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(8807),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(8812),
                            Kg = false,
                            Naziv = "Sampon",
                            Opis = "sampon protiv peruti",
                            PodkategorijaID = 43,
                            PoslovnicaID = 1,
                            Sifra = "0004",
                            SlikaPutanja = "proizvod_13.jpg",
                            Status = true
                        },
                        new
                        {
                            ProizvodID = 1012,
                            Cijena = 2m,
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(8843),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(8848),
                            Kg = true,
                            Naziv = "Paradajz",
                            Opis = "Paradajz",
                            PodkategorijaID = 39,
                            PoslovnicaID = 1,
                            Sifra = "0034",
                            SlikaPutanja = "proizvod_1012.jpg",
                            Status = true
                        },
                        new
                        {
                            ProizvodID = 1013,
                            Cijena = 4.5m,
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(8884),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(8889),
                            Kg = true,
                            Naziv = "Ananas",
                            Opis = "Svjezi ananas",
                            PodkategorijaID = 38,
                            PoslovnicaID = 1,
                            Sifra = "0064",
                            SlikaPutanja = "proizvod_1013.jpg",
                            Status = true
                        },
                        new
                        {
                            ProizvodID = 1014,
                            Cijena = 1.2m,
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(8921),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(8926),
                            Kg = true,
                            Naziv = "Jabuka",
                            Opis = "Svjeza crvena jabuka",
                            PodkategorijaID = 38,
                            PoslovnicaID = 3,
                            Sifra = "23455",
                            SlikaPutanja = "proizvod_1014.jpg",
                            Status = true
                        },
                        new
                        {
                            ProizvodID = 1015,
                            Cijena = 2.3m,
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(9015),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(9021),
                            Kg = true,
                            Naziv = "Banana",
                            Opis = "Svjeza banana",
                            PodkategorijaID = 38,
                            PoslovnicaID = 3,
                            Sifra = "3436",
                            SlikaPutanja = "proizvod_1015.jpg",
                            Status = true
                        },
                        new
                        {
                            ProizvodID = 1016,
                            Cijena = 2.5m,
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(9055),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(9060),
                            Kg = true,
                            Naziv = "Narandza",
                            Opis = "Svjeza narandza",
                            PodkategorijaID = 38,
                            PoslovnicaID = 3,
                            Sifra = "56773",
                            SlikaPutanja = "proizvod_1016.jpg",
                            Status = true
                        },
                        new
                        {
                            ProizvodID = 1017,
                            Cijena = 6.5m,
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(9094),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(9099),
                            Kg = false,
                            Naziv = "Schauma",
                            Opis = "sampon protiv peruti schauma",
                            PodkategorijaID = 43,
                            PoslovnicaID = 3,
                            Sifra = "6888",
                            SlikaPutanja = "proizvod_1017.jpg",
                            Status = true
                        },
                        new
                        {
                            ProizvodID = 1018,
                            Cijena = 8.5m,
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(9131),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(9135),
                            Kg = false,
                            Naziv = "Hipp hrana za bebe",
                            Opis = "Hrana za bebe do 3 godine",
                            PodkategorijaID = 60,
                            PoslovnicaID = 3,
                            Sifra = "00680",
                            SlikaPutanja = "proizvod_1018.jpg",
                            Status = true
                        },
                        new
                        {
                            ProizvodID = 1019,
                            Cijena = 5m,
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(9167),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(9171),
                            Kg = false,
                            Naziv = "Sampon za bebe",
                            Opis = "Neiritirajuci sampon za bebe",
                            PodkategorijaID = 61,
                            PoslovnicaID = 3,
                            Sifra = "06456",
                            SlikaPutanja = "proizvod_1019.jpg",
                            Status = true
                        },
                        new
                        {
                            ProizvodID = 1020,
                            Cijena = 2.3m,
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(9202),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(9206),
                            Kg = true,
                            Naziv = "Banana",
                            Opis = "Svjeza banana",
                            PodkategorijaID = 38,
                            PoslovnicaID = 2,
                            Sifra = "6888",
                            SlikaPutanja = "proizvod_1020.jpg",
                            Status = true
                        },
                        new
                        {
                            ProizvodID = 1021,
                            Cijena = 0.5m,
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(9238),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(9243),
                            Kg = true,
                            Naziv = "Mrkva",
                            Opis = "Svjeza mrkva",
                            PodkategorijaID = 39,
                            PoslovnicaID = 2,
                            Sifra = "4754",
                            SlikaPutanja = "proizvod_1021.jpg",
                            Status = true
                        },
                        new
                        {
                            ProizvodID = 1022,
                            Cijena = 8.5m,
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(9274),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(9279),
                            Kg = false,
                            Naziv = "Pedigree",
                            Opis = "Hrana za pse",
                            PodkategorijaID = 55,
                            PoslovnicaID = 2,
                            Sifra = "65774",
                            SlikaPutanja = "proizvod_1022.jpg",
                            Status = true
                        },
                        new
                        {
                            ProizvodID = 1023,
                            Cijena = 7.5m,
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(9310),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(9315),
                            Kg = false,
                            Naziv = "Friskies",
                            Opis = "Hrana za macke",
                            PodkategorijaID = 55,
                            PoslovnicaID = 2,
                            Sifra = "75856",
                            SlikaPutanja = "proizvod_1023.jpg",
                            Status = true
                        },
                        new
                        {
                            ProizvodID = 1024,
                            Cijena = 1500m,
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(9346),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(9350),
                            Kg = false,
                            Naziv = "Dell Lattitude E5440",
                            Opis = "15.6'' 1.7GhZ 8GB",
                            PodkategorijaID = 64,
                            PoslovnicaID = 4,
                            Sifra = "658648",
                            SlikaPutanja = "proizvod_1024.jpg",
                            Status = true
                        },
                        new
                        {
                            ProizvodID = 1025,
                            Cijena = 2500m,
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(9384),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(9389),
                            Kg = false,
                            Naziv = "MSI GS70",
                            Opis = "17 inch 16GB i7-8400 2.5 GHz",
                            PodkategorijaID = 64,
                            PoslovnicaID = 4,
                            Sifra = "567888",
                            SlikaPutanja = "proizvod_1025.jpg",
                            Status = true
                        },
                        new
                        {
                            ProizvodID = 1026,
                            Cijena = 2500m,
                            DatumIzmjene = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(9420),
                            DatumKreiranja = new DateTime(2022, 8, 21, 14, 20, 53, 149, DateTimeKind.Local).AddTicks(9425),
                            Kg = false,
                            Naziv = "Iphone 12 Pro",
                            Opis = "256GB Purple",
                            PodkategorijaID = 65,
                            PoslovnicaID = 4,
                            Sifra = "476767",
                            SlikaPutanja = "proizvod_1026.jpg",
                            Status = true
                        });
                });

            modelBuilder.Entity("NaruciBa.Database.Recenzija", b =>
                {
                    b.Property<int>("RecenzijaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KlijentID")
                        .HasColumnType("int");

                    b.Property<string>("Komentar")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Ocjena")
                        .HasColumnType("int");

                    b.Property<int?>("PoslovnicaID")
                        .HasColumnType("int");

                    b.HasKey("RecenzijaID");

                    b.HasIndex("KlijentID");

                    b.HasIndex("PoslovnicaID");

                    b.ToTable("Recenzija");
                });

            modelBuilder.Entity("NaruciBa.Database.TrgovackiLanac", b =>
                {
                    b.Property<int>("TrgovackiLanacID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SlikaPutanja")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrgovackiLanacID");

                    b.ToTable("TrgovackiLanac");

                    b.HasData(
                        new
                        {
                            TrgovackiLanacID = 1,
                            Naziv = "Bingo",
                            SlikaPutanja = "trgovackilanac_1.jpg"
                        },
                        new
                        {
                            TrgovackiLanacID = 2,
                            Naziv = "Konzum",
                            SlikaPutanja = "trgovackilanac_2.jpg"
                        },
                        new
                        {
                            TrgovackiLanacID = 3,
                            Naziv = "Genelec",
                            SlikaPutanja = "trgovackilanac_3.jpg"
                        });
                });

            modelBuilder.Entity("NaruciBa.Database.Dostavljac", b =>
                {
                    b.HasOne("NaruciBa.Database.DostavljacStatus", "DostavljacStatusNavigation")
                        .WithMany("Dostavljacs")
                        .HasForeignKey("DostavljacStatus")
                        .HasConstraintName("FK__Dostavlja__Dosta__4B7734FF");

                    b.HasOne("NaruciBa.Database.Korisnik", "Korisnik")
                        .WithMany("Dostavljacs")
                        .HasForeignKey("KorisnikID")
                        .HasConstraintName("FK__Dostavlja__Koris__4A8310C6");

                    b.Navigation("DostavljacStatusNavigation");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("NaruciBa.Database.DostavnaKvotum", b =>
                {
                    b.HasOne("NaruciBa.Database.Klijent", "Klijent")
                        .WithMany("DostavnaKvota")
                        .HasForeignKey("KlijentID")
                        .HasConstraintName("FK__DostavnaK__Klije__6EC0713C");

                    b.HasOne("NaruciBa.Database.Poslovnica", "Poslovnica")
                        .WithMany("DostavnaKvota")
                        .HasForeignKey("PoslovnicaID")
                        .HasConstraintName("FK__DostavnaK__Poslo__6DCC4D03");

                    b.Navigation("Klijent");

                    b.Navigation("Poslovnica");
                });

            modelBuilder.Entity("NaruciBa.Database.Klijent", b =>
                {
                    b.HasOne("NaruciBa.Database.Korisnik", "Korisnik")
                        .WithMany("Klijents")
                        .HasForeignKey("KorisnikID")
                        .HasConstraintName("FK__Klijent__Korisni__51300E55");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("NaruciBa.Database.Koordinator", b =>
                {
                    b.HasOne("NaruciBa.Database.Korisnik", "Korisnik")
                        .WithMany("Koordinators")
                        .HasForeignKey("KorisnikID")
                        .HasConstraintName("FK__Koordinat__Koris__4E53A1AA");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("NaruciBa.Database.Korisnik", b =>
                {
                    b.HasOne("NaruciBa.Database.Grad", "Grad")
                        .WithMany("Korisniks")
                        .HasForeignKey("GradID")
                        .HasConstraintName("FK__Korisnik__GradID__45BE5BA9");

                    b.Navigation("Grad");
                });

            modelBuilder.Entity("NaruciBa.Database.KuponPoslovnica", b =>
                {
                    b.HasOne("NaruciBa.Database.Kupon", "Kupon")
                        .WithMany("KuponPoslovnicas")
                        .HasForeignKey("KuponID")
                        .HasConstraintName("FK__KuponPosl__Kupon__756D6ECB");

                    b.HasOne("NaruciBa.Database.Poslovnica", "Poslovnica")
                        .WithMany("KuponPoslovnicas")
                        .HasForeignKey("PoslovnicaID")
                        .HasConstraintName("FK__KuponPosl__Poslo__76619304");

                    b.Navigation("Kupon");

                    b.Navigation("Poslovnica");
                });

            modelBuilder.Entity("NaruciBa.Database.NaruceniProizvod", b =>
                {
                    b.HasOne("NaruciBa.Database.Narudzba", "Narudzba")
                        .WithMany("NaruceniProizvods")
                        .HasForeignKey("NarudzbaID")
                        .HasConstraintName("FK__NaruceniP__Narud__01D345B0");

                    b.HasOne("NaruciBa.Database.Proizvod", "Proizvod")
                        .WithMany("NaruceniProizvods")
                        .HasForeignKey("ProizvodID")
                        .HasConstraintName("FK__NaruceniP__Proiz__00DF2177");

                    b.Navigation("Narudzba");

                    b.Navigation("Proizvod");
                });

            modelBuilder.Entity("NaruciBa.Database.Narudzba", b =>
                {
                    b.HasOne("NaruciBa.Database.Dostavljac", "Dostavljac")
                        .WithMany("Narudzbas")
                        .HasForeignKey("DostavljacID")
                        .HasConstraintName("FK__Narudzba__Dostav__7A3223E8");

                    b.HasOne("NaruciBa.Database.Klijent", "Klijent")
                        .WithMany("Narudzbas")
                        .HasForeignKey("KlijentID")
                        .HasConstraintName("FK__Narudzba__Klijen__793DFFAF");

                    b.HasOne("NaruciBa.Database.Koordinator", "Koordinator")
                        .WithMany("Narudzbas")
                        .HasForeignKey("KoordinatorID")
                        .HasConstraintName("FK__Narudzba__Koordi__7B264821");

                    b.HasOne("NaruciBa.Database.Kupon", "Kupon")
                        .WithMany("Narudzbas")
                        .HasForeignKey("KuponID")
                        .HasConstraintName("FK__Narudzba__KuponI__7E02B4CC");

                    b.HasOne("NaruciBa.Database.NarudzbaStatus", "NarudzbaStatus")
                        .WithMany("Narudzbas")
                        .HasForeignKey("NarudzbaStatusID")
                        .HasConstraintName("FK__Narudzba__Narudz__7D0E9093");

                    b.HasOne("NaruciBa.Database.Poslovnica", "Poslovnica")
                        .WithMany("Narudzbas")
                        .HasForeignKey("PoslovnicaID")
                        .HasConstraintName("FK__Narudzba__Poslov__7C1A6C5A");

                    b.Navigation("Dostavljac");

                    b.Navigation("Klijent");

                    b.Navigation("Koordinator");

                    b.Navigation("Kupon");

                    b.Navigation("NarudzbaStatus");

                    b.Navigation("Poslovnica");
                });

            modelBuilder.Entity("NaruciBa.Database.Podkategorija", b =>
                {
                    b.HasOne("NaruciBa.Database.Kategorija", "Kategorija")
                        .WithMany("Podkategorijas")
                        .HasForeignKey("KategorijaID")
                        .HasConstraintName("FK__Podkatego__Kateg__5BAD9CC8");

                    b.Navigation("Kategorija");
                });

            modelBuilder.Entity("NaruciBa.Database.Poslovnica", b =>
                {
                    b.HasOne("NaruciBa.Database.Grad", "Grad")
                        .WithMany("Poslovnicas")
                        .HasForeignKey("GradID")
                        .HasConstraintName("FK__Poslovnic__GradI__55F4C372");

                    b.HasOne("NaruciBa.Database.TrgovackiLanac", "TrgovackiLanac")
                        .WithMany("Poslovnicas")
                        .HasForeignKey("TrgovackiLanacID")
                        .HasConstraintName("FK__Poslovnic__Trgov__56E8E7AB");

                    b.Navigation("Grad");

                    b.Navigation("TrgovackiLanac");
                });

            modelBuilder.Entity("NaruciBa.Database.PoslovnicaFavorit", b =>
                {
                    b.HasOne("NaruciBa.Database.Klijent", "Klijent")
                        .WithMany("PoslovnicaFavorits")
                        .HasForeignKey("KlijentID")
                        .HasConstraintName("FK__Poslovnic__Klije__662B2B3B");

                    b.HasOne("NaruciBa.Database.Poslovnica", "Poslovnica")
                        .WithMany("PoslovnicaFavorits")
                        .HasForeignKey("PoslovnicaID")
                        .HasConstraintName("FK__Poslovnic__Poslo__671F4F74");

                    b.Navigation("Klijent");

                    b.Navigation("Poslovnica");
                });

            modelBuilder.Entity("NaruciBa.Database.PoslovnicaKategorija", b =>
                {
                    b.HasOne("NaruciBa.Database.Kategorija", "Kategorija")
                        .WithMany("PoslovnicaKategorijas")
                        .HasForeignKey("KategorijaID")
                        .HasConstraintName("FK__Trgovacki__Kateg__634EBE90");

                    b.HasOne("NaruciBa.Database.Poslovnica", "Poslovnica")
                        .WithMany("PoslovnicaKategorijas")
                        .HasForeignKey("PoslovnicaID")
                        .HasConstraintName("FK_poslovnicaKategorija_Poslovnica");

                    b.Navigation("Kategorija");

                    b.Navigation("Poslovnica");
                });

            modelBuilder.Entity("NaruciBa.Database.Proizvod", b =>
                {
                    b.HasOne("NaruciBa.Database.Podkategorija", "Podkategorija")
                        .WithMany("Proizvods")
                        .HasForeignKey("PodkategorijaID")
                        .HasConstraintName("FK__Proizvod__Podkat__5E8A0973");

                    b.HasOne("NaruciBa.Database.Poslovnica", "Poslovnica")
                        .WithMany("Proizvods")
                        .HasForeignKey("PoslovnicaID")
                        .HasConstraintName("FK__Proizvod__Poslov__5F7E2DAC");

                    b.Navigation("Podkategorija");

                    b.Navigation("Poslovnica");
                });

            modelBuilder.Entity("NaruciBa.Database.Recenzija", b =>
                {
                    b.HasOne("NaruciBa.Database.Klijent", "Klijent")
                        .WithMany("Recenzijas")
                        .HasForeignKey("KlijentID")
                        .HasConstraintName("FK__Recenzija__Klije__69FBBC1F");

                    b.HasOne("NaruciBa.Database.Poslovnica", "Poslovnica")
                        .WithMany("Recenzijas")
                        .HasForeignKey("PoslovnicaID")
                        .HasConstraintName("FK__Recenzija__Poslo__6AEFE058");

                    b.Navigation("Klijent");

                    b.Navigation("Poslovnica");
                });

            modelBuilder.Entity("NaruciBa.Database.Dostavljac", b =>
                {
                    b.Navigation("Narudzbas");
                });

            modelBuilder.Entity("NaruciBa.Database.DostavljacStatus", b =>
                {
                    b.Navigation("Dostavljacs");
                });

            modelBuilder.Entity("NaruciBa.Database.Grad", b =>
                {
                    b.Navigation("Korisniks");

                    b.Navigation("Poslovnicas");
                });

            modelBuilder.Entity("NaruciBa.Database.Kategorija", b =>
                {
                    b.Navigation("Podkategorijas");

                    b.Navigation("PoslovnicaKategorijas");
                });

            modelBuilder.Entity("NaruciBa.Database.Klijent", b =>
                {
                    b.Navigation("DostavnaKvota");

                    b.Navigation("Narudzbas");

                    b.Navigation("PoslovnicaFavorits");

                    b.Navigation("Recenzijas");
                });

            modelBuilder.Entity("NaruciBa.Database.Koordinator", b =>
                {
                    b.Navigation("Narudzbas");
                });

            modelBuilder.Entity("NaruciBa.Database.Korisnik", b =>
                {
                    b.Navigation("Dostavljacs");

                    b.Navigation("Klijents");

                    b.Navigation("Koordinators");
                });

            modelBuilder.Entity("NaruciBa.Database.Kupon", b =>
                {
                    b.Navigation("KuponPoslovnicas");

                    b.Navigation("Narudzbas");
                });

            modelBuilder.Entity("NaruciBa.Database.Narudzba", b =>
                {
                    b.Navigation("NaruceniProizvods");
                });

            modelBuilder.Entity("NaruciBa.Database.NarudzbaStatus", b =>
                {
                    b.Navigation("Narudzbas");
                });

            modelBuilder.Entity("NaruciBa.Database.Podkategorija", b =>
                {
                    b.Navigation("Proizvods");
                });

            modelBuilder.Entity("NaruciBa.Database.Poslovnica", b =>
                {
                    b.Navigation("DostavnaKvota");

                    b.Navigation("KuponPoslovnicas");

                    b.Navigation("Narudzbas");

                    b.Navigation("PoslovnicaFavorits");

                    b.Navigation("PoslovnicaKategorijas");

                    b.Navigation("Proizvods");

                    b.Navigation("Recenzijas");
                });

            modelBuilder.Entity("NaruciBa.Database.Proizvod", b =>
                {
                    b.Navigation("NaruceniProizvods");
                });

            modelBuilder.Entity("NaruciBa.Database.TrgovackiLanac", b =>
                {
                    b.Navigation("Poslovnicas");
                });
#pragma warning restore 612, 618
        }
    }
}
